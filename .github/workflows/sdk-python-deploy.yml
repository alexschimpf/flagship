name: sdk python - deploy

on:
  workflow_dispatch:

jobs:
  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.12
  #     - run: make -C sdk/python install-dev
  #     - run: make -C sdk/python build
  #     - run: make -C sdk/python install-build
  #     - env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
  #       run: make -C sdk/python deploy

  release:
    # needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: make -C sdk/python install-dev
      - run: make -C sdk/python build
      - id: version
        run: echo "VERSION=$(ls dist/*.tar.gz | sed 's/dist\/flagship_sdk-//' | sed 's/.tar.gz//')" >> $GITHUB_OUTPUT
        working-directory: ./sdk/python
      - run: |
          git fetch origin main
          echo "COMMIT_SHA=$(git rev-parse origin/main)" >> $GITHUB_ENV
          git config --global user.email "aschimpf1@gmail.com"
          git config --global user.name "Alex Schimpf"
        env:
          GITHUB_TOKEN: ${{ secrets.CLI_PAT }}
      - run: |
          git tag -a sdk-python/v${{ steps.version.outputs.VERSION }} -m "Flagship Python SDK v${{ steps.version.outputs.VERSION }}" $COMMIT_SHA
          git push origin sdk-python/v${{ steps.version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.CLI_PAT }}
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CLI_PAT }}
        with:
          tag_name: sdk-python/v${{ steps.version.outputs.VERSION }}
          release_name: "[SDK - Python] Release v${{ steps.version.outputs.VERSION }}"
